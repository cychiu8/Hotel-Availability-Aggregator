version: '3.1'

services:
  db:
    image: postgres
    restart: always
    volumes:
      - ./postgresql/schema:/docker-entrypoint-initdb.d
      - ./postgresql/pgdata:/var/lib/postgresql/data
    env_file:
      - ./postgresql/.env
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    depends_on:
      - db
    env_file:
      - ./postgresql/.env
  hotel-search:
    build: ./hotels-search-service/hotels-search
    depends_on:
      - db
    ports:
      - "8080:8080"
    volumes:
      - ./hotels-search-service/hotels-search/:/app
    env_file:
      - ./hotels-search-service/.env
    command: ["tail", "-f", "/dev/null"]
  user-service:
    build: ./user-service/user-service
    depends_on:
      - db
    ports:
      - "8081:8080"
    volumes:
      - ./user-service/user-service/:/app
    env_file:
      - ./user-service/.env
    command: ["tail", "-f", "/dev/null"]
  notification-service:
    build: ./notification-service/notification-service
    depends_on:
      - db
    ports:
      - "8082:8080"
    volumes:
      - ./notification-service/notification-service/:/app
    env_file:
      - ./notification-service/.env
    command: ["tail", "-f", "/dev/null"]
  zookeeper:
    image: zookeeper:3.7.0
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1